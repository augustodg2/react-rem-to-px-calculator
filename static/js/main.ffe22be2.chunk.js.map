{"version":3,"sources":["components/NumberInput.js","components/RemInput.js","components/PxInput.js","components/RootFSInput.js","App.js","index.js"],"names":["NumberInput","onChange","field","placeholder","value","txt","useRef","hide","useEffect","current","style","width","offsetWidth","className","ref","type","pattern","name","data-testid","RemInput","PxInput","RootFSInput","App","useState","rootFSValue","setRootFSValue","remValue","setRemValue","pxValue","setPxValue","mode","setMode","e","newValue","target","validity","valid","href","src","alt","title","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ffe22be2.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react'\r\n\r\nconst NumberInput = ({ onChange, field, placeholder, value }) => {\r\n  const txt = useRef(null)\r\n  const hide = useRef(null)\r\n  \r\n  useEffect(() => {\r\n    txt.current.style.width = (hide.current.offsetWidth + 8) + \"px\";\r\n    // set width to placeholder offset if has no value\r\n  }, [value])\r\n\r\n  return (<>\r\n    <span className=\"hide\" ref={hide}>{value}</span>\r\n    <input\r\n      ref={txt}\r\n      type=\"text\"\r\n      pattern=\"([0-9]+([.][0-9]*)?|[.][0-9]+)\"\r\n      name={field}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onChange}\r\n      data-testid={`${field}-input`}\r\n    />\r\n  </>)\r\n}\r\n\r\nexport default NumberInput\r\n","import React from 'react'\r\nimport NumberInput from './NumberInput'\r\n\r\nconst RemInput = ({ onChange, value }) => {\r\n  return (\r\n    <div className=\"rem-field\">\r\n      <h3>REM</h3>\r\n      <div className=\"field\">\r\n        <NumberInput\r\n          onChange={onChange}\r\n          field='rem'\r\n          placeholder=\"Enter rem value...\"\r\n          value={value}\r\n        />\r\n        <span className=\"unit\">rem</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RemInput\r\n","import React from 'react'\r\nimport NumberInput from './NumberInput'\r\n\r\nconst PxInput = ({ onChange, value }) => {\r\n  return (\r\n    <div className=\"px-field\">\r\n      <h3>Pixels</h3>\r\n      <div className=\"field\">\r\n        <NumberInput\r\n          onChange={onChange}\r\n          field='px'\r\n          placeholder=\"Enter px value...\"\r\n          value={value}\r\n        />\r\n        <span className=\"unit\">px</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PxInput\r\n","import React from 'react'\r\nimport NumberInput from './NumberInput'\r\n\r\nconst RootFSInput = ({ onChange, value }) => {\r\n  return (\r\n    <div className=\"root-fs-field\">\r\n      <div className=\"field\">\r\n        <NumberInput\r\n          onChange={onChange}\r\n          field='root-fs'\r\n          placeholder=\"Enter root font-size...\"\r\n          value={value}\r\n        />\r\n        <span className=\"unit\">px</span>\r\n      </div>\r\n      <h4 className=\"title\">Root font size:</h4>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RootFSInput\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport RemInput from './components/RemInput';\r\nimport PxInput from './components/PxInput';\r\nimport RootFSInput from './components/RootFSInput';\r\n\r\nfunction App() {\r\n  const [rootFSValue, setRootFSValue] = useState(14)\r\n  const [remValue, setRemValue] = useState(1)\r\n  const [pxValue, setPxValue] = useState(rootFSValue)\r\n  const [mode, setMode] = useState('remToPx')\r\n\r\n  useEffect(() => {\r\n    if (mode === 'remToPx') setPxValue(remValue * rootFSValue)\r\n    else if (mode === 'pxToRem') setRemValue(pxValue / rootFSValue)\r\n  }, [rootFSValue, remValue, pxValue, mode])\r\n\r\n  const onRootFSChange = (e) => {\r\n    let newValue = e.target.validity.valid ? e.target.value : rootFSValue;\r\n    setRootFSValue(newValue)\r\n  }\r\n\r\n  const onRemChange = (e) => {\r\n    let newValue = e.target.validity.valid ? e.target.value : remValue;\r\n    setRemValue(newValue)\r\n    setMode('remToPx')\r\n  }\r\n\r\n  const onPxChange = (e) => {\r\n    let newValue = e.target.validity.valid ? e.target.value : pxValue;\r\n    setPxValue(newValue)\r\n    setMode('pxToRem')\r\n  }\r\n\r\n  return (<>\r\n    <div className=\"container\">\r\n      <h1><span className=\"primary\">REM</span> to <span className=\"primary\">PX</span> Calculator</h1>\r\n      <h2>Click to edit values</h2>\r\n\r\n      <main className=\"conversion\">\r\n        <RemInput value={remValue} onChange={onRemChange} />\r\n        <PxInput value={pxValue} onChange={onPxChange} />\r\n      </main>\r\n\r\n      <RootFSInput value={rootFSValue} onChange={onRootFSChange} />\r\n        \r\n    </div>\r\n    <footer>\r\n      <nav>\r\n        <a href=\"https://github.com/augustodg2/rem-to-px-calculator\"><img src=\"img\\github.png\" alt=\"Source code\" title=\"Source code\" /></a>\r\n        <a href=\"mailto:augustodg2@gmail.com\"><img src=\"img\\mail.png\" alt=\"Contact Me\" title=\"Contact Me\" /></a>\r\n      </nav>\r\n      <p>Made by Augusto Dias. <a href=\"#\">See my work</a>.</p>\r\n      <p className=\"muted\">Mail icon made by <a href=\"https://www.flaticon.com/authors/iconixar\">Iconixar</a> from www.flaticon.com</p>\r\n    </footer>\r\n  </>);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}